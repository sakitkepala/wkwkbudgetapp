{"version":3,"sources":["test/server/index.js","components/nav.js","screens/budget-welcome.js","utils/index.js","components/editor-inline-budget.js","utils/budget-lines.js","components/table.js","components/budget-line.js","utils/budget-dana.js","screens/budget-manajemen.js","utils/dana-lines.js","screens/budget.js","screens/akun.js","authenticated-app.js","App.js","index.js","test/data/akun.js","test/data/budget.js","test/data/budgetLine.js","test/data/danaLine.js","test/server/server-handlers.js","test/server/dev-server.js"],"names":["window","module","exports","require","linkNavigasi","href","teks","Link","children","props","as","RouterLink","to","NavBar","justifyContent","h","px","color","className","TriangleDown","TriangleUp","NavMenu","Settings","top","left","fontSize","textTransform","map","i","mx","InitialBudget","onSimpanAkun","React","useState","jenisAkun","setJenisAkun","namaAkun","setNamaAkun","namaBankTerakhir","setBankTerakhir","flexDirection","alignItems","pt","w","mt","p","rounded","shadow","bgColor","isRequired","id","name","value","onChange","val","direction","isDisabled","variant","ev","target","placeholder","onKeyDown","key","code","keyCode","data","jenis","nama","dana","console","log","ori","client","apiEndpoint","customOptions","defaultOptions","method","options","body","JSON","stringify","undefined","fetch","then","respon","a","json","ok","Promise","reject","message","EditorInlineBudget","line","ml","mr","useDisclosure","onOpen","onClose","isOpen","dianggarkan","inputBudget","setInputBudget","mutate","queryClient","useQueryClient","useMutation","updatedLine","Error","onSuccess","budgetLinesKey","linesData","getQueryData","setQueryData","useUpdateBudgetLine","initialFocusRef","placement","size","Edit","ref","formattedInput","Number","colorScheme","onClick","IndeterminateCheckbox","indeterminate","rest","defaultRef","resolvedRef","current","type","CellDanaTersedia","terpakai","danaTersedia","KontainerTabel","pb","borderRadius","TabelBudget","konfigTabel","columns","Header","getToggleAllRowsExpandedProps","span","Sun","Cell","row","canExpand","getToggleRowExpandedProps","isExpanded","ChevronDown","ChevronRight","accessor","isNumeric","values","useTable","useGroupBy","useExpanded","useRowSelect","hooks","visibleColumns","push","getToggleAllRowsSelectedProps","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","th","getHeaderProps","render","tr","getRowProps","cells","td","getCellProps","column","original","InfoDetail","py","KontainerLoading","textAlign","KontainerError","BudgetLinesDataView","budgetLines","isLoading","isError","error","display","danaDefault","total","dipakai","sisa","reducerDanaBudget","state","action","DisplayBulan","totalByField","arr","fieldJumlah","length","reduce","DisplayDanaBudget","danaLines","useReducer","danaBudget","dispatch","setTotal","useCallback","jumlah","setTerpakai","useDanaBudget","totalDana","totalBudget","borderWidth","borderColor","fontWeight","namaBulan","bulan","ManajemenBudgetScreen","useQuery","responBudget","queryInfo","useBudgetLines","Date","getMonth","BudgetScreen","setIsLoading","listAkun","setListAkun","isBudgetSiap","Boolean","budgetSetupData","akun","useEffect","apiClient","useBudgetSetup","AkunDanaScreen","dataAkun","setDataAkun","width","m","flexDir","DashboardScreen","AuthenticatedApp","minH","path","App","QueryClient","ReactDOM","StrictMode","QueryClientProvider","document","getElementById","readAll","listBudget","dataBudget","readLatest","budgetId","listBudgetLine","dataBudgetLine","read","find","searchByField","field","filter","update","valueObj","readByField","dataDanaLine","handlers","get","req","res","context","akunDB","status","paramBudgetId","url","searchParams","danaLineDB","budgetDB","queryBulan","budgetLineDB","put","params","parse","hasilUpdate","fullUrl","URL","server","setupWorker","start","serviceWorker","pathname"],"mappings":"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","file":"static/js/main.17163c44.chunk.js","sourcesContent":["// if (process.env.NODE_ENV === \"development\" && typeof window !== \"undefined\") {\n//   module.exports = require(\"./dev-server\");\n// }\n\nif (typeof window !== \"undefined\") {\n  module.exports = require(\"./dev-server\");\n}\n","import { Link as RouterLink } from \"react-router-dom\";\nimport { Box, Center, Flex, Link as ChakraLink } from \"@chakra-ui/layout\";\nimport {\n  SettingsIcon,\n  TriangleDownIcon,\n  TriangleUpIcon,\n} from \"@chakra-ui/icons\";\n\n// TODO: pindah ke direktori config sendiri\nconst linkNavigasi = [\n  {\n    href: \"/u/budget\",\n    teks: \"Bajet\",\n  },\n  {\n    href: \"/u/dana\",\n    teks: \"Akun Dana\",\n  },\n];\n\nfunction Link({ href, children, ...props }) {\n  if (!href) {\n    return <ChakraLink {...props}>{children}</ChakraLink>;\n  }\n  return (\n    <ChakraLink as={RouterLink} to={href} {...props}>\n      {children}\n    </ChakraLink>\n  );\n}\n\nfunction NavBar() {\n  return (\n    <Center\n      as=\"header\"\n      justifyContent=\"space-between\"\n      h=\"14\"\n      px=\"16\"\n      color=\"gray.400\"\n    >\n      <Flex className=\"logo\">\n        <Link href=\"/u/dashboard\">\n          <TriangleDownIcon />\n          <TriangleUpIcon />\n        </Link>\n      </Flex>\n      <NavMenu />\n\n      <Box className=\"menu\">\n        <Link>\n          <SettingsIcon /> &darr;\n        </Link>\n      </Box>\n    </Center>\n  );\n}\n\nfunction NavMenu(props) {\n  return (\n    <Flex\n      className=\"nav-menu-list\"\n      top=\"12\"\n      left=\"16\"\n      fontSize=\"sm\"\n      textTransform=\"uppercase\"\n      color=\"gray.400\"\n      {...props}\n    >\n      {linkNavigasi.map(({ href, teks }, i) => (\n        <Link key={href} href={href} mx=\"4\">\n          {teks} &rarr;\n        </Link>\n      ))}\n    </Flex>\n  );\n}\n\nexport { NavBar, NavMenu };\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Flex, Stack, Text } from \"@chakra-ui/layout\";\nimport { Radio, RadioGroup } from \"@chakra-ui/radio\";\nimport React from \"react\";\n\nfunction InitialBudget({ onSimpanAkun }) {\n  const [jenisAkun, setJenisAkun] = React.useState(null);\n  const [namaAkun, setNamaAkun] = React.useState(\"\");\n  const [namaBankTerakhir, setBankTerakhir] = React.useState(\"\");\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" pt=\"24\">\n      <Text w=\"600px\" color=\"gray.500\">\n        Hai! Kamu butuh akun dulu buat siapkan dana, nih, sebelum bisa\n        budgeting. Kamu bisa tambahkan akun lewat form di bawah.\n      </Text>\n\n      <Box\n        w=\"600px\"\n        mt=\"12\"\n        p=\"12\"\n        pt=\"8\"\n        rounded=\"md\"\n        shadow=\"base\"\n        bgColor=\"white\"\n      >\n        <FormControl as=\"fieldset\" isRequired>\n          <RadioGroup\n            id=\"akun-jenis\"\n            name=\"akun-jenis\"\n            value={jenisAkun}\n            onChange={(val) => {\n              setJenisAkun(val);\n              if (val === \"tunai\") {\n                setNamaAkun(\"Tunai\");\n              } else {\n                setNamaAkun(namaBankTerakhir);\n              }\n            }}\n          >\n            <Stack direction=\"row\">\n              <Radio value=\"bank\">Bank</Radio>\n              <Radio value=\"tunai\">Tunai</Radio>\n            </Stack>\n          </RadioGroup>\n        </FormControl>\n\n        <FormControl as=\"fieldset\">\n          <Input\n            id=\"akun-nama\"\n            name=\"akun-nama\"\n            isDisabled={jenisAkun === \"tunai\"}\n            variant={jenisAkun === \"tunai\" ? \"filled\" : \"outline\"}\n            value={namaAkun}\n            onChange={(ev) => {\n              setNamaAkun(ev.target.value);\n              if (jenisAkun === \"bank\") {\n                setBankTerakhir(ev.target.value);\n              }\n            }}\n            placeholder=\"misal... Jenius\"\n          />\n        </FormControl>\n\n        <FormControl as=\"fieldset\">\n          <Input\n            id=\"akun-dana\"\n            name=\"akun-dana\"\n            placeholder=\"Rp ...\"\n            onKeyDown={(ev) => {\n              if (\n                ev.key === \"Enter\" ||\n                ev.code === \"Enter\" ||\n                ev.keyCode === \"13\"\n              ) {\n                // Submit\n                const data = {\n                  jenis: jenisAkun,\n                  nama: namaAkun,\n                  dana: ev.target.value,\n                };\n                console.log(\"submit enter gan\");\n                console.log(\"data\", data);\n\n                // mock: masuk ke screen Manajemen Budget\n                onSimpanAkun((ori) => (ori ? [...ori, namaAkun] : [namaAkun]));\n              }\n            }}\n          />\n        </FormControl>\n      </Box>\n    </Flex>\n  );\n}\n\nexport { InitialBudget };\n","function client(apiEndpoint, { data, ...customOptions } = {}) {\n  const defaultOptions = {\n    method: \"GET\",\n  };\n  const options = {\n    ...defaultOptions,\n    body: data ? JSON.stringify(data) : undefined,\n    ...customOptions,\n  };\n\n  // `fetch` nge-return Promise\n  return fetch(apiEndpoint, options).then(async (respon) => {\n    const data = await respon.json();\n    if (respon.ok) {\n      return data;\n    } else {\n      return Promise.reject({ message: \"tidak ok\" });\n    }\n  });\n}\n\nexport { client };\n","import * as React from \"react\";\nimport {\n  Popover,\n  PopoverTrigger,\n  Button,\n  PopoverContent,\n  PopoverArrow,\n  PopoverBody,\n  Portal,\n  Input,\n  PopoverFooter,\n  PopoverCloseButton,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { EditIcon } from \"@chakra-ui/icons\";\nimport { useUpdateBudgetLine } from \"../utils/budget-lines\";\n\nfunction EditorInlineBudget({ line, ml, mr }) {\n  const { onOpen, onClose, isOpen } = useDisclosure();\n\n  const [inputBudget, setInputBudget] = React.useState(line.dianggarkan);\n  const { mutate } = useUpdateBudgetLine();\n\n  const initialFocusRef = React.useRef();\n\n  React.useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n    setInputBudget(line.dianggarkan);\n  }, [isOpen, line.dianggarkan]);\n\n  const onSubmitBudget = (ev) => {\n    if (inputBudget !== line.dianggarkan) {\n      mutate({ id: line.id, dianggarkan: inputBudget });\n    }\n    onClose();\n  };\n\n  return (\n    <Popover\n      placement=\"top\"\n      initialFocusRef={initialFocusRef}\n      isOpen={isOpen}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      <PopoverTrigger>\n        <Button size=\"xs\" ml={ml}>\n          <EditIcon />\n        </Button>\n      </PopoverTrigger>\n\n      <Portal>\n        <PopoverContent p=\"2\" pt=\"6\" bgColor=\"gray.200\">\n          <PopoverArrow bgColor=\"gray.200\" />\n          <PopoverBody>\n            <Input\n              ref={initialFocusRef}\n              placeholder=\"misalnya... 1 000 000,00\"\n              bgColor=\"gray.100\"\n              value={inputBudget}\n              onChange={(ev) => {\n                const formattedInput = Number(ev.target.value);\n                setInputBudget(formattedInput);\n              }}\n            />\n          </PopoverBody>\n\n          <PopoverFooter>\n            <Button size=\"sm\" colorScheme=\"green\" onClick={onSubmitBudget}>\n              Simpan\n            </Button>\n          </PopoverFooter>\n          <PopoverCloseButton />\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  );\n}\n\nexport { EditorInlineBudget };\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { client } from \"../utils\";\n\nfunction useBudgetLines() {\n  // TODO: [\"budget-lines\", bulan]\n  const queryInfo = useQuery([\"budget-lines\", \"Desember\"], async () => {\n    try {\n      // dummy hardcoded endpoint\n      // TODO: abstraksikan, misal: `/budgetLine/${bulan}`\n      const respon = await client(\"/budgetLine?bulan=Desember\");\n      return respon.data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  });\n\n  return { ...queryInfo, budgetLines: queryInfo.data };\n}\n\nfunction useUpdateBudgetLine() {\n  const queryClient = useQueryClient();\n\n  const mutationInfo = useMutation(\n    async (updatedLine) => {\n      try {\n        const respon = await client(`/budgetLine/${updatedLine.id}`, {\n          method: \"PUT\",\n          data: updatedLine,\n        });\n        return respon.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    },\n    {\n      // Memperbarui cache data budget lines supaya komponen yang\n      // pakai data ini render ulang dengan data yang baru\n      onSuccess: (updatedLine) => {\n        const budgetLinesKey = [\"budget-lines\", \"Desember\"];\n        const linesData = queryClient.getQueryData(budgetLinesKey);\n\n        queryClient.setQueryData(\n          budgetLinesKey,\n          linesData.map((line) =>\n            line.id === updatedLine.id ? updatedLine : line\n          )\n        );\n      },\n    }\n  );\n  return mutationInfo;\n}\n\nexport { useBudgetLines, useUpdateBudgetLine };\n","import * as React from \"react\";\nimport { useTable, useGroupBy, useExpanded, useRowSelect } from \"react-table\";\nimport { Table, Thead, Tbody, Tr, Th, Td, chakra, Box } from \"@chakra-ui/react\";\nimport { ChevronDownIcon, ChevronRightIcon, SunIcon } from \"@chakra-ui/icons\";\nimport { EditorInlineBudget } from \"./editor-inline-budget\";\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\nfunction CellDanaTersedia({ dianggarkan = 0, terpakai = 0 }) {\n  const danaTersedia = dianggarkan - terpakai;\n  return <span>{danaTersedia}</span>;\n}\n\nfunction KontainerTabel({ children }) {\n  return (\n    <Box\n      as=\"main\"\n      w=\"100%\"\n      pt=\"4\"\n      pb=\"12\"\n      borderRadius=\"md\"\n      shadow=\"base\"\n      bgColor=\"white\"\n    >\n      {children}\n    </Box>\n  );\n}\n\nfunction TabelBudget({ data }) {\n  const columns = React.useMemo(\n    () => [\n      {\n        id: \"expander\",\n        // Pakai ini buat kasih tombol \"expand all\":\n        Header: ({ getToggleAllRowsExpandedProps }) => (\n          <chakra.span {...getToggleAllRowsExpandedProps()}>\n            <SunIcon />\n          </chakra.span>\n        ),\n        Cell: ({ row }) =>\n          row.canExpand && (\n            <chakra.span {...row.getToggleRowExpandedProps()}>\n              {row.isExpanded ? <ChevronDownIcon /> : <ChevronRightIcon />}\n            </chakra.span>\n          ),\n      },\n      {\n        Header: \"Kategori\",\n        accessor: \"kategori\",\n      },\n      {\n        Header: \"Dianggarkan\",\n        accessor: \"dianggarkan\",\n        isNumeric: true,\n      },\n      {\n        Header: \"Terpakai\",\n        accessor: \"terpakai\",\n        isNumeric: true,\n      },\n      {\n        Header: \"Tersedia\",\n        accessor: \"tersedia\",\n        isNumeric: true,\n        Cell: ({ row }) => {\n          const { dianggarkan, terpakai } = row.values;\n          return (\n            <CellDanaTersedia dianggarkan={dianggarkan} terpakai={terpakai} />\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const konfigTabel = { data, columns };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(konfigTabel, useGroupBy, useExpanded, useRowSelect, (hooks) => {\n    hooks.visibleColumns.push((columns) => [\n      {\n        id: \"seleksi\",\n        Header: ({ getToggleAllRowsSelectedProps }) => (\n          <div>\n            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n          </div>\n        ),\n        Cell: ({ row }) => (\n          <div>\n            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n          </div>\n        ),\n      },\n      ...columns,\n    ]);\n  });\n\n  return (\n    <KontainerTabel>\n      <Table {...getTableProps()}>\n        <Thead>\n          {headerGroups.map((headerGroup) => (\n            <Tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((th) => (\n                <Th {...th.getHeaderProps()} isNumeric={th.isNumeric}>\n                  {th.render(\"Header\")}\n                </Th>\n              ))}\n            </Tr>\n          ))}\n        </Thead>\n\n        <Tbody {...getTableBodyProps()}>\n          {rows.map((tr) => {\n            prepareRow(tr);\n            return (\n              <Tr {...tr.getRowProps()}>\n                {tr.cells.map((td) => (\n                  <Td {...td.getCellProps()} isNumeric={td.column.isNumeric}>\n                    {td.render(\"Cell\")}{\" \"}\n                    {td.column.id !== \"dianggarkan\" ? null : (\n                      <EditorInlineBudget line={td.row.original} ml=\"2\" />\n                    )}\n                  </Td>\n                ))}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n    </KontainerTabel>\n  );\n}\n\nexport { TabelBudget };\n","import React from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\nimport { TabelBudget } from \"../components/table\";\n\nfunction InfoDetail() {\n  return (\n    <Box\n      as=\"aside\"\n      className=\"info\"\n      w=\"40%\"\n      px=\"40px\"\n      py=\"12px\"\n      color=\"gray.500\"\n    >\n      <Text>To be developed...</Text>\n      {/* TODO: {kontenInfoDetail} */}\n    </Box>\n  );\n}\n\nfunction KontainerLoading({ children }) {\n  return (\n    <Box\n      as=\"main\"\n      w=\"100%\"\n      p=\"12\"\n      borderRadius=\"md\"\n      shadow=\"base\"\n      bgColor=\"white\"\n      textAlign=\"center\"\n    >\n      {children}\n    </Box>\n  );\n}\n\nfunction KontainerError({ children }) {\n  return (\n    <Box\n      as=\"main\"\n      w=\"100%\"\n      p=\"12\"\n      borderRadius=\"md\"\n      shadow=\"base\"\n      bgColor=\"white\"\n      textAlign=\"center\"\n    >\n      <pre>{children}</pre>\n    </Box>\n  );\n}\n\nfunction BudgetLinesDataView({ budgetLines }) {\n  const { isLoading, isError, error, data } = budgetLines;\n\n  return (\n    <Box display=\"flex\" w=\"full\" mt=\"72px\" px=\"16\">\n      {isLoading ? (\n        <KontainerLoading>Loading...</KontainerLoading>\n      ) : isError ? (\n        <KontainerError>\n          {error?.message || \"Ada error, tidak bisa tarik datanya.\"}\n        </KontainerError>\n      ) : (\n        <TabelBudget data={data} />\n      )}\n      <InfoDetail />\n    </Box>\n  );\n}\n\nexport { BudgetLinesDataView };\n","import React from \"react\";\n\nconst danaDefault = {\n  total: 0,\n  dipakai: 0,\n  sisa: 0,\n};\n\nfunction reducerDanaBudget(state, action) {\n  const { total, dipakai } = action;\n\n  switch (action.type) {\n    case \"TOTAL\":\n      if (total === state.total) {\n        return state;\n      }\n      return { ...state, total, sisa: total - state.dipakai };\n\n    case \"DIPAKAI\":\n      if (dipakai === state.dipakai) {\n        return state;\n      }\n      return { ...state, dipakai, sisa: state.total - dipakai };\n\n    default:\n      console.error(\"Tipe dispatch gak disupport.\");\n      return state;\n  }\n}\n\nfunction useDanaBudget() {\n  const [danaBudget, dispatch] = React.useReducer(\n    reducerDanaBudget,\n    danaDefault\n  );\n\n  const setTotal = React.useCallback(\n    (jumlah) => dispatch({ type: \"TOTAL\", total: jumlah }),\n    []\n  );\n\n  const setTerpakai = React.useCallback(\n    (jumlah) => dispatch({ type: \"DIPAKAI\", dipakai: jumlah }),\n    []\n  );\n\n  return { ...danaBudget, setTotal, setTerpakai };\n}\n\nexport { useDanaBudget };\n","import * as React from \"react\";\nimport { Box, Center, chakra } from \"@chakra-ui/react\";\nimport { BudgetLinesDataView } from \"../components/budget-line\";\nimport { useDanaBulanIni } from \"../utils/dana-lines\";\nimport { useBudgetLines } from \"../utils/budget-lines\";\nimport { useDanaBudget } from \"../utils/budget-dana\";\n\nfunction DisplayBulan(props) {\n  return (\n    <Box\n      className=\"display-bulan\"\n      textTransform=\"uppercase\"\n      fontSize=\"2xl\"\n      color=\"gray.300\"\n      {...props}\n    >\n      {props.children}\n    </Box>\n  );\n}\n\nconst totalByField = (arr, fieldJumlah) => {\n  return arr.length > 0\n    ? arr.reduce((total, line) => total + line[fieldJumlah], 0)\n    : 0;\n};\n\nfunction DisplayDanaBudget({ danaLines, budgetLines }) {\n  const dana = useDanaBudget();\n\n  React.useEffect(() => {\n    if (!danaLines.data) {\n      return;\n    }\n    const totalDana = totalByField(danaLines.data, \"jumlah\");\n    dana.setTotal(totalDana);\n  }, [dana, danaLines.data]);\n\n  React.useEffect(() => {\n    if (!budgetLines.data) {\n      return;\n    }\n    const totalBudget = totalByField(budgetLines.data, \"dianggarkan\");\n    dana.setTerpakai(totalBudget);\n  }, [dana, budgetLines.data]);\n\n  return (\n    <Box\n      py=\"12\"\n      px=\"8\"\n      mt=\"12\"\n      bgColor=\"gray.50\"\n      borderWidth=\"1px\"\n      borderColor=\"gray.200\"\n      borderRadius=\"lg\"\n      shadow=\"base\"\n      fontSize=\"4xl\"\n      fontWeight=\"bold\"\n      color=\"gray.500\"\n    >\n      <chakra.span fontWeight=\"normal\" color=\"gray.300\">\n        Rp\n      </chakra.span>{\" \"}\n      {dana.sisa}\n      <chakra.span fontWeight=\"normal\" color=\"gray.300\">\n        ,00\n      </chakra.span>\n    </Box>\n  );\n}\n\nfunction namaBulan(bulan) {\n  switch (bulan) {\n    case 11:\n      return \"Desember\";\n    default:\n      console.error(\"Bulan gak disupport\");\n  }\n}\n\nfunction getBulan(dummyBulan) {\n  return dummyBulan || new Date().getMonth();\n}\n\n/**\n * Screen manajemen budget menampilkan informasi untuk budgeting tiap bulannya,\n * sehingga data yang tampil adalah data budgeting untuk bulan ini.\n *\n * Data dan state yang dibutuhkan untuk menampilkan UI di sini:\n * 1. sekarang bulan apa?\n * 2. berapa dana yang tersedia untuk budgeting?\n * 3. apa saja yang dibudget untuk bulan ini?\n * ...\n */\n\nfunction ManajemenBudgetScreen() {\n  // Tiap render bisa secara otomatis dapat data Date bulan dan tahun sekarang\n  // dengan menginstansiasi objek Date. Kemudian, karena requirement saat ini\n  // belum perlu mengelola bulan & tahun saat ini sebagai state karena tidak ada\n  // kondisi untuk mengubah state tersebut di renderan saat ini, jadi hook di\n  // bawah bisa dengan aman mengasumsikan date saat ini langsung dari inisiasi\n  // objek `Date()` saja.\n  const danaLines = useDanaBulanIni();\n  const budgetLines = useBudgetLines();\n\n  const bulan = getBulan(11);\n\n  return (\n    <Box>\n      <Center flexDirection=\"column\">\n        <DisplayBulan mt=\"12\">{namaBulan(bulan)}</DisplayBulan>\n        <DisplayDanaBudget danaLines={danaLines} budgetLines={budgetLines} />\n      </Center>\n      <BudgetLinesDataView budgetLines={budgetLines} />\n    </Box>\n  );\n}\n\nexport { ManajemenBudgetScreen };\n","import { useQuery } from \"react-query\";\nimport { client } from \"../utils\";\n\nfunction useDanaBulanIni() {\n  const queryInfo = useQuery([\"dana-bulan-ini\"], async () => {\n    try {\n      const responBudget = await client(\"/budget/bulan-ini\");\n      const respon = await client(\n        `/dana-line?budgetId=${responBudget.data.id}`\n      );\n      return respon.data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  });\n  return queryInfo;\n}\n\nexport { useDanaBulanIni };\n","import React from \"react\";\nimport { InitialBudget as InitBudgetScreen } from \"./budget-welcome\";\nimport { ManajemenBudgetScreen } from \"./budget-manajemen\";\nimport { client as apiClient } from \"../utils\";\n\nfunction useBudgetSetup() {\n  const [isLoading, setIsLoading] = React.useState(false);\n  // Setup sementara cuma cek data list akun\n  const [listAkun, setListAkun] = React.useState(null);\n\n  const isBudgetSiap = Boolean(listAkun) || listAkun?.length > 0;\n  const budgetSetupData = {\n    akun: listAkun,\n  };\n\n  React.useEffect(() => {\n    if (isBudgetSiap || isLoading) {\n      return;\n    }\n\n    setIsLoading(true);\n    apiClient(\"/akun\").then(\n      (respon) => {\n        setIsLoading(false);\n        setListAkun(respon.data);\n      },\n      (error) => {\n        setIsLoading(false);\n        console.log(\"Error:\", error.message);\n      }\n    );\n  }, [isBudgetSiap, isLoading]);\n\n  return {\n    isLoading,\n    isBudgetSiap,\n    budgetSetupData,\n    dispatch: (value) => setListAkun(value),\n  };\n}\n\nfunction BudgetScreen() {\n  // TODO: implemen dispatch & value pakai context => <BudgetSetupProvider /> ?\n  const { isBudgetSiap, dispatch } = useBudgetSetup();\n\n  // TODO: budget setup & pengecekan budget siap ini baiknya di provider authenticated app\n  // biar gak ada flash form waktu lagi loading data\n  if (!isBudgetSiap) {\n    return <InitBudgetScreen onSimpanAkun={(data) => dispatch(data)} />;\n  }\n  return <ManajemenBudgetScreen />;\n}\n\nexport { BudgetScreen };\n","import React from \"react\";\nimport { client as apiClient } from \"../utils\";\nimport { Button } from \"@chakra-ui/button\";\nimport { Box, Center, Flex, Text } from \"@chakra-ui/layout\";\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"@chakra-ui/table\";\n\nfunction AkunDanaScreen() {\n  const [dataAkun, setDataAkun] = React.useState(null);\n\n  React.useEffect(() => {\n    if (dataAkun) {\n      return;\n    }\n\n    apiClient(\"/akun\").then(\n      (respon) => {\n        setDataAkun(respon.data);\n      },\n      (error) => {\n        console.log(\"Tidak ada data. Pesan error:\", error.message);\n      }\n    );\n  }, [dataAkun]);\n\n  return (\n    <Flex direction=\"column\" alignItems=\"center\">\n      <Box\n        as=\"main\"\n        width=\"60%\"\n        mt=\"24\"\n        pb=\"12\"\n        borderRadius=\"md\"\n        shadow=\"base\"\n        bgColor=\"white\"\n      >\n        <Button m=\"8\">+ Tambah Akun</Button>\n\n        <Table>\n          <Thead>\n            <Tr>\n              <Th>Akun</Th>\n              <Th>Jenis Akun</Th>\n              <Th isNumeric>Dana</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {dataAkun?.map(({ id, nama, jenis, dana }) => (\n              <Tr key={id}>\n                <Td>{nama}</Td>\n                <Td>{jenis}</Td>\n                <Td isNumeric>{dana}</Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n\n        {!dataAkun || dataAkun.length === 0 ? (\n          <Center flexDir=\"column\" h=\"250px\">\n            <Text color=\"gray.500\">Belum punya akun. Buat dulu ya.</Text>\n            <Button m=\"8\">+ Buat Akun</Button>\n          </Center>\n        ) : null}\n      </Box>\n    </Flex>\n  );\n}\n\nexport { AkunDanaScreen };\n","import { Switch, Route } from \"react-router-dom\";\n\nimport { Box, Center } from \"@chakra-ui/layout\";\nimport { NavBar } from \"./components/nav\";\nimport { BudgetScreen } from \"./screens/budget\";\nimport { AkunDanaScreen } from \"./screens/akun\";\n\n// TODO:\nfunction DashboardScreen() {\n  return \"Dashboard\";\n}\n\nfunction AuthenticatedApp() {\n  return (\n    <Box className=\"WkwkApp\" bgColor=\"gray.100\" minH=\"100vh\">\n      <NavBar />\n\n      <Switch>\n        <Route path=\"/u/dashboard\">\n          <DashboardScreen />\n        </Route>\n\n        <Route path=\"/u/budget\">\n          <BudgetScreen />\n        </Route>\n\n        <Route path=\"/u/dana\">\n          <AkunDanaScreen />\n        </Route>\n      </Switch>\n\n      <Center as=\"footer\" className=\"footer\" p=\"40px\" color=\"gray.500\">\n        &copy;&nbsp;\n        <a href=\"https://dev.sakitkepala.dev\">sakitkepala.dev</a>, 2021\n      </Center>\n    </Box>\n  );\n}\n\nexport { AuthenticatedApp };\n","import { AuthenticatedApp } from \"./authenticated-app\";\n\nfunction App() {\n  // Otentikasi mock\n  const user = true;\n  return !user ? null : <AuthenticatedApp />;\n}\n\nexport default App;\n","import \"./test/server\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <QueryClientProvider client={queryClient}>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </QueryClientProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import dataAkun from \"./data-akun.json\";\n\nasync function readAll() {\n  return dataAkun;\n}\n\nexport { readAll };\n","import dataBudget from \"./data-budget.json\";\n\nlet listBudget = [...dataBudget];\n\nasync function readLatest(budgetId) {\n  return listBudget[dataBudget.length - 1];\n}\n\nexport { readLatest };\n","import dataBudgetLine from \"./data-budgetLine.json\";\n\nlet listBudgetLine = [...dataBudgetLine];\n\nasync function readAll() {\n  return listBudgetLine;\n}\n\nasync function read(id) {\n  return listBudgetLine.find((line) => line.id === id);\n}\n\nasync function searchByField(field, value) {\n  return listBudgetLine.filter((line) => line[field] === value);\n}\n\nasync function update(valueObj) {\n  // reassign data source-nya setiap kali ada update/delete\n  // supaya data yang depend ke sini ikut update waktu di-fetch/query\n  listBudgetLine = listBudgetLine.map((line) => {\n    if (line.id === valueObj.id) {\n      return { ...line, ...valueObj };\n    }\n    return line;\n  });\n  return read(valueObj.id);\n}\n\nexport { readAll, searchByField, update };\n","import dataDanaLine from \"./data-danaLine.json\";\n\nasync function readAll() {\n  return dataDanaLine;\n}\n\nasync function readByField(field, value) {\n  return dataDanaLine.filter((line) => line[field] === value);\n}\n\nexport { readAll, readByField };\n","import { rest } from \"msw\";\nimport * as akunDB from \"../data/akun\";\nimport * as budgetDB from \"../data/budget\";\nimport * as budgetLineDB from \"../data/budgetLine\";\nimport * as danaLineDB from \"../data/danaLine\";\n\nconst handlers = [\n  rest.get(\"/akun\", async (req, res, context) => {\n    const akun = await akunDB.readAll();\n    if (!akun) {\n      return res(\n        context.status(404),\n        context.json({ status: 404, message: \"Tidak ada akun\" })\n      );\n    }\n    return res(context.json({ data: akun }));\n  }),\n\n  rest.get(\"/dana-line\", async (req, res, context) => {\n    const field = \"budgetId\";\n    const paramBudgetId = Number(req.url.searchParams.get(field));\n    const data = await danaLineDB.readByField(field, paramBudgetId);\n    return res(context.json({ data }));\n  }),\n\n  rest.get(\"/budget/bulan-ini\", async (req, res, context) => {\n    // get latest budget\n    const data = await budgetDB.readLatest();\n    return res(context.json({ data }));\n\n    // TODO: read semua resource collection\n    // ...\n  }),\n\n  rest.get(\"/budgetLine\", async (req, res, context) => {\n    // get lines menurut parameter bulan\n    const queryBulan = req.url.searchParams.get(\"bulan\");\n    if (queryBulan) {\n      const data = await budgetLineDB.searchByField(\"bulan\", queryBulan);\n      if (!data || data === []) {\n        return res(context.status(401));\n      }\n      return res(context.json({ data }));\n    }\n\n    // TODO: default ke resource collections\n    // ...\n  }),\n\n  rest.put(\"/budgetLine/:id\", async (req, res, context) => {\n    const hasilUpdate = await budgetLineDB.update({\n      id: req.params.id,\n      ...JSON.parse(req.body),\n    });\n    return res(context.json({ data: hasilUpdate }));\n  }),\n];\n\nexport { handlers };\n","import { setupWorker } from \"msw\";\nimport { handlers } from \"./server-handlers\";\n\nconst fullUrl = new URL(\"https://staging.sakitkepala.dev/wkwkbudgetapp/\");\n\nconst server = setupWorker(...handlers);\nserver.start({\n  serviceWorker: {\n    url: fullUrl.pathname + \"mockServiceWorker.js\",\n  },\n});\n\nexport * from \"msw\";\nexport { server };\n"],"sourceRoot":""}